apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: jira-add-comment
description: "Add comments to Jira issues"
inputs:
  jira-url:
    description: "Jira instance URL (e.g., https://your-domain.atlassian.net)"
    required: true
  jira-username:
    description: "Jira username or email address"
    required: true
  jira-token:
    description: "Jira API token"
    required: true
  issue-key:
    description: "Single issue key to comment on (mutually exclusive with jql)"
    required: false
  jql:
    description: "JQL query to find issues to comment on (mutually exclusive with issue-key)"
    required: false
  comment:
    description: "Comment text to add"
    required: true
  visibility:
    description: "Comment visibility (public, private, or group/role name)"
    default: "public"
    required: false
  max-results:
    description: "Maximum number of issues to comment on when using JQL"
    default: "50"
    required: false
  continue-on-error:
    description: "Whether to continue commenting on other issues if one fails"
    default: "true"
    required: false

outputs:
  comment-count:
    value: ${{ steps.add-comment.outputs.comment-count }}
    description: "Number of issues that received comments"
  commented-issues:
    value: ${{ steps.add-comment.outputs.commented-issues }}
    description: "JSON array of issue keys that received comments"

runs:
  using: composite
  steps:
    - id: add-comment
      name: Add Comment to Jira Issues
      uses: docker://ldonleycb/jira-actions:latest
      shell: sh
      run: |
        /app/jira-actions add-comment \
          --url "${{ inputs.jira-url }}" \
          --username "${{ inputs.jira-username }}" \
          --token "${{ inputs.jira-token }}" \
          ${{ inputs.issue-key && format('--issue-key "{0}"', inputs.issue-key) || '' }} \
          ${{ inputs.jql && format('--jql "{0}"', inputs.jql) || '' }} \
          --comment '${{ inputs.comment }}' \
          --visibility "${{ inputs.visibility }}" \
          --max-results "${{ inputs.max-results }}" \
          ${{ inputs.continue-on-error == 'false' && '--continue-on-error=false' || '' }} \
          --verbose
